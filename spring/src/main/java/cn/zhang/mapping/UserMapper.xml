<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.zhang.dao.UserMapper">
	<resultMap id="BaseResultMap" type="cn.zhang.model.User">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id, name, password
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from user
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from user
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="cn.zhang.model.User">
		insert into user (id, name,
		password
		)
		values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertSelective" parameterType="cn.zhang.model.User">
		insert into user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="password != null">
				password,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="cn.zhang.model.User">
		update user
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="cn.zhang.model.User">
		update user
		set
		name = #{name,jdbcType=VARCHAR},
		password =
		#{password,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>

	<!-- 获取user对应的包括role的信息 -->
	<select id="getRoleById" parameterType="java.lang.String"
		resultType="cn.zhang.model.Reol">
		select * from user_role where u_id = #{id,jdbcType=VARCHAR}
	</select>
	<resultMap type="cn.zhang.model.User" id="userResultMap"
		extends="BaseResultMap">
		<!-- 返回是集合类型使用collection进行连接 -->
		<collection property="userRoles" column="id" javaType="java.util.List"
			select="getRoleById"></collection>
		<!-- 返回是引用类型使用association -->
		<!-- <association property=""></association> -->
	</resultMap>
	<select id="getAllUser" resultMap="userResultMap">
		select
		<include refid="Base_Column_List"></include>
		from user
	</select>
</mapper>